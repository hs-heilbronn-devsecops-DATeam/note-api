name: CI Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test-and-security-check:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine  # Use a Redis container
        ports:
          - 6379:6379  # Expose the Redis port
        options: --health-cmd "redis-server --test-memory" --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        python-version: [3.12]

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov pytest-xdist fakeredis

      # Step 4: Set up Redis
      - name: Wait for Redis to start
        run: |
          docker exec redis redis-cli ping
          
      # Step 5: Run tests with pytest
      - name: Run tests with pytest and coverage
        run: |
          pytest --maxfail=1 --disable-warnings --durations=10 -n auto --cov=note_api --cov-report=xml

      # Step 6: Upload coverage to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      # Step 7: Run Snyk security scan
      - name: Run security scan with Snyk
        uses: snyk/actions/python@master
        with:
          args: "monitor --all-projects"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
