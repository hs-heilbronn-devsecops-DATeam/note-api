name: CI Pipeline

# Trigger the workflow on every pull request to the main branch
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    
# Define the jobs that will run
jobs:
  test:
    runs-on: ubuntu-latest 
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]  # Test against the latest Python versions
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3  # Use latest checkout version (v3)

      # Step 2: Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3  # Use latest setup-python version (v3)
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Assumes a requirements.txt file is present

      # Step 4: Run tests with pytest and coverage
      - name: Run tests with pytest and coverage
        run: |
          pytest --cov=note_api --maxfail=1 --disable-warnings --durations=10 -n auto  # Run tests and collect coverage

      # Step 5: Upload coverage to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # Ensure the token is added to GitHub secrets

      # Step 6: Run security scan with Snyk (test)
      - name: Run security scan with Snyk (test)
        uses: snyk/actions/python@master
        with:
          args: "test"  # First, test for vulnerabilities in dependencies
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}  # Ensure the SNYK_TOKEN secret is available

      # Step 7: Monitor project with Snyk
      - name: Monitor project with Snyk
        uses: snyk/actions/python@master
        with:
          args: "monitor --all-projects"  # Monitor after testing
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # Job to build and push Docker container
  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: test  # Ensure Docker build only happens after test job

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3  # Use latest checkout version (v3)

      # Step 2: Set up Docker Buildx (for building Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}  # GitHub token is automatically available for authentication

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/my-image:${{ github.sha }} .

      # Step 5: Push Docker image to GitHub Container Registry
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}/my-image:${{ github.sha }}
