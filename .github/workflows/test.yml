name: CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  # Job for testing and security checks
  test-and-security-check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.11, 3.12] 

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3  

      # Step 2: Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: snyk/actions/python@master  
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov  

      # Step 4: Run unit tests with pytest and coverage
      - name: Run tests with pytest and coverage
        run: |
          pytest --maxfail=1 --disable-warnings --durations=10 -n auto --cov=note_api --cov-report=xml  # Using pytest-cov to measure coverage

      # Step 5: Upload coverage to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3  
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  

      # Step 6: Integrate security scan using Snyk
      - name: Run security scan with Snyk
        uses: snyk/actions/python@master  
        with:
          args: "monitor --all-projects"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # Job for Snyk Analysis 
  snyk-analysis:
    runs-on: ubuntu-latest
    needs: test-and-security-check  

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3  

      # Step 2: Set up Python environment
      - name: Specify Python version
        uses: snyk/actions/python@master  
        with:
          python-version: '3.12'

      # Step 3: Run Snyk analysis 
      - name: Run Snyk analysis
        uses: snyk/actions/python@master  
        with:
          snyk_api_key: ${{ secrets.SNYK_TOKEN }}  
          path_to_dependency_file: requirements.txt  # Path to the dependency file
          upload_sarif: true  # Upload SARIF results to GitHub
          snyk_github_integration_token: ${{ github.token }}  
          repository: ${{ github.repository }}  

      # Step 4: Upload SARIF file to GitHub Security tab
      - name: Upload SARIF file to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2  
        with:
          sarif_file: ${{ github.workspace }}/snyk.sarif  # Path to the SARIF file generated by Snyk

  # Job to build and push Docker container
  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: snyk-analysis  

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3  

      # Step 2: Set up Docker Buildx (for building Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  

      # Step 3: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2  
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}  # GitHub token for authentication

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/my-image:${{ github.sha }} .

      # Step 5: Push Docker image to GitHub Container Registry
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}/my-image:${{ github.sha }}  # Push the Docker image to GitHub registry
