name: CI Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  # Job for testing and security checks
  test-and-security-check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov  # Ensure pytest-cov is installed

      # Step 4: Run unit tests with coverage (pytest-cov)
      - name: Run tests with pytest and coverage
        run: |
          pytest --maxfail=1 --disable-warnings --durations=10 -n auto --cov=note_api --cov-report=xml  # Using pytest-cov to measure coverage and output an XML report

      # Step 5: Upload coverage to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      # Step 6: Integrate security scan using Snyk
      - name: Run security scan with Snyk
        uses: snyk/actions/python@master
        with:
          args: "monitor --all-projects"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # Job for Snyk Analysis (Source Composition & License Identification)
  snyk-analysis:
    runs-on: ubuntu-latest
    needs: test-and-security-check  # Ensure Snyk analysis runs only after test and security checks pass

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Specify Python version
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # This can be customized depending on the specific Python version

      # Step 3: Run Snyk analysis (Source Composition Analysis and License identification)
      - name: Run Snyk analysis
        uses: snyk/actions/python@v3  # Updated to v3
        with:
          snyk_api_key: ${{ secrets.SNYK_TOKEN }}  # Snyk API key from GitHub secrets
          path_to_dependency_file: requirements.txt  # Path to the dependency file
          upload_sarif: true  # Upload SARIF results
          snyk_github_integration_token: ${{ github.token }}  # GitHub token for integration with Security Tab
          repository: ${{ github.repository }}  # GitHub repository name

      # Step 4: Upload SARIF file to GitHub Security tab
      - name: Upload SARIF file to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ github.workspace }}/snyk.sarif  # Path to the SARIF file generated by Snyk

  # Job to build and push Docker container
  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: snyk-analysis  # Ensure Docker build only happens after Snyk analysis

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (for building Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}  # GitHub token is automatically available for authentication

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/my-image:${{ github.sha }} .

      # Step 5: Push Docker image to GitHub Container Registry
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}/my-image:${{ github.sha }}
