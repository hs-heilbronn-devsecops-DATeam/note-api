name: CI Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  # Job for testing and security checks
  test-and-security-check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.12]  # You can expand this matrix to 3.9, 3.10, etc., if needed.

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3  # Use the latest stable v3 version

      # Step 2: Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3  # Use actions/setup-python for Python setup
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov  # Ensure pytest-cov is installed for coverage reporting

      # Step 4: Run unit tests with pytest and coverage
      - name: Run tests with pytest and coverage
        run: |
          pytest --maxfail=1 --disable-warnings --durations=10 -n auto --cov=note_api --cov-report=xml  # Using pytest-cov to measure coverage

      # Step 5: Upload coverage to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3  # Use the latest v3 of Codecov action
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # Ensure your Codecov token is available in GitHub secrets

      # Step 6: Integrate security scan using Snyk
      - name: Run security scan with Snyk
        uses: snyk/actions/python@master  # Use the latest stable version
        with:
          args: "monitor --all-projects"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # Job for Snyk Analysis (Source Composition & License Identification)
  snyk-analysis:
    runs-on: ubuntu-latest
    needs: test-and-security-check  # Ensure Snyk analysis runs only after test and security checks pass

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3  # Use latest version v3

      # Step 2: Set up Python environment for Snyk (use the same Python version)
      - name: Set up Python for Snyk analysis
        uses: actions/setup-python@v3  # Use latest version v3
        with:
          python-version: '3.12'  # Ensure the version matches your tests

      # Step 3: Run Snyk analysis (Source Composition Analysis and License identification)
      - name: Run Snyk analysis
        uses: snyk/actions/python@master  # Ensure the latest version is used
        with:
          snyk_api_key: ${{ secrets.SNYK_TOKEN }}  # Provide Snyk API key from GitHub secrets
          path_to_dependency_file: requirements.txt  # Path to the dependency file
          upload_sarif: true  # Upload SARIF results to GitHub
          snyk_github_integration_token: ${{ github.token }}  # GitHub token for integration with the Security tab
          repository: ${{ github.repository }}  # GitHub repository name

      # Step 4: Upload SARIF file to GitHub Security tab
      - name: Upload SARIF file to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2  # Make sure we use the
