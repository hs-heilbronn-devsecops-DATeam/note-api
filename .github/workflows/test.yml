name: CI Pipeline

# Trigger the workflow on pull requests to the main branch
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  # Job for testing and security checks
  test-and-security-check:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]  # Use valid Python versions

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to v3 for better Node.js support

      # Step 2: Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3  # Updated to v3 for better Node.js support
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  

      # Step 4: Run unit tests with coverage (pytest-cov)
      - name: Run tests with pytest and coverage
        run: |
          pytest --maxfail=1 --disable-warnings --durations=10 -n auto --cov=note_api --cov-report=xml  # Using pytest-cov to measure coverage and output an XML report

      # Step 5: Upload coverage to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      # Step 6: Install Snyk CLI and run security scan
      - name: Install Snyk CLI
        run: |
          curl https://downloads.snyk.io/cli/stable/snyk-linux -o snyk-linux  # Download Snyk CLI for Linux
          curl https://downloads.snyk.io/cli/stable/snyk-linux.sha256 -o snyk.sha256
          sha256sum -c snyk.sha256  # Verify the SHA checksum
          chmod +x snyk-linux  # Make it executable
          sudo mv snyk-linux /usr/local/bin/snyk  # Install the Snyk CLI

      - name: Run Snyk security scan
        run: snyk monitor --all-projects  # Run the security scan using Snyk CLI
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # Job to build and push Docker container
  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: test-and-security-check  
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to v3

      # Step 2: Set up Docker Buildx (for building Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}  

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/my-image:${{ github.sha }} .

      # Step 5: Push Docker image to GitHub Container Registry
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}/my-image:${{ github.sha }}
