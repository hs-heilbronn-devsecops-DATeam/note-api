name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]  # Latest Python 3.x versions
        cpu-cores: [2, 4, 8]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  

      - name: Set up Python
        uses: actions/setup-python@v3  
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov  # Install pytest and pytest-cov for coverage

      - name: Run tests with pytest and collect coverage
        run: |
          pytest --cov=my_project --maxfail=1 --disable-warnings -v  # Run tests with coverage
          
  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} 

  snyk-scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  
        
      - name: Set up Snyk CLI
        uses: snyk/actions/setup@v2
        
      - name: Run Snyk Security Scan
        run: snyk test --all-projects 

  docker-build:
    runs-on: ubuntu-latest
    needs: [test, snyk-scan]  
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3  

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}  

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/my-project:latest  
